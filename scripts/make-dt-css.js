// transform dt css files to one export

import { readFileSync, writeFileSync } from 'fs';
import path from 'path';
import glob from 'globby';
import chalk from 'chalk';

console.log('Concatenating DT stylesheets');

const files = glob.sync('./src/tokens/css/*.css');
console.log(files);

try {
  let css = `
/* autogenerated by scrips/make-dt-css.js */
`;

  files.map(file => {
    css += `

/* ------------------- ${file} ----------------------*/
`;
    css += readFileSync(file, 'utf8');
  });

  let code = `import { css } from 'lit';

export default css\`${css}\`;
  `;
  writeFileSync(path.join('./src/themes', 'dt-klik-light.styles.ts'), code, 'utf8');
} catch (err) {
  console.error(chalk.red('Error Concatenating DT stylesheets!'));
  console.error(err);
}

/*

Theme file structure:

# 1. Sources, Global Level: dt-global-*

dt-global-klik-colors.styles.ts
dt-global-tw-colors.styles.ts
dt-global-klik-ui.styles.ts

# 2. Connect, Alias (Theme?) Level: dt-alias-*

dtx-alias.styles.ts

# 3. Assign, Map Level: dt-map-*

dtx-map.styles.ts

*/
